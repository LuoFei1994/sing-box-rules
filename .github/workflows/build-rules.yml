name: Auto Update Rules

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  build-rules:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 关键解决方案：使用全局模块安装
    - name: Install dependencies globally
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath -m pip install --user --upgrade pip
        & $pythonPath -m pip install --user requests
        & $pythonPath -m pip install --user pyyaml

    # 验证环境
    - name: Verify installation
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath -c "import requests; print('Requests installed:', requests.__version__)"
        & $pythonPath -c "import sys; print('\n'.join(sys.path))"
        
    - name: Create Build Directory
      run: New-Item -ItemType Directory -Path build -Force | Out-Null
      
    # 关键修改：使用指定路径运行脚本
    - name: Convert Rules
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath scripts/convert.py
      
    - name: Commit and Push
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add build/
        git commit -m "自动更新规则集 - $(Get-Date -Format 'yyyyMMdd_HHmm')"
        git push

    - name: Verify environment
      run: |
        # 检查Python安装位置
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath --version
        
        # 检查请求模块安装位置
        & $pythonPath -c "import requests; print(requests.__file__)"
        
        # 检查系统路径
        echo "系统PATH:"
        echo $env:PATH
        
        # 检查用户模块路径
        & $pythonPath -c "import site; print('用户site-packages:', site.getusersitepackages())"
