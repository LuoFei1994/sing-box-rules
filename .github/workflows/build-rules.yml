name: Auto Update Rules

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  build-rules:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 关键修改1：创建虚拟环境
    - name: Create virtual environment
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath -m venv venv
        
    # 关键修改2：在虚拟环境中安装依赖
    - name: Install dependencies
      run: |
        $venvPython = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "venv\Scripts\python.exe"
        & $venvPython -m pip install --upgrade pip
        & $venvPython -m pip install requests
        & $venvPython -m pip install pyyaml  # 添加其他必要依赖
        
    # 关键修改3：验证安装
    - name: Verify installation
      run: |
        $venvPython = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "venv\Scripts\python.exe"
        & $venvPython -c "import requests; print('Requests version:', requests.__version__)"
        & $venvPython -m pip list
        
    - name: Create Build Directory
      run: New-Item -ItemType Directory -Path build -Force | Out-Null
      
    # 关键修改4：在虚拟环境中运行脚本
    - name: Convert Rules
      run: |
        $venvPython = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "venv\Scripts\python.exe"
        & $venvPython scripts/convert.py
      
    - name: Commit and Push
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add build/
        git commit -m "自动更新规则集 - $(Get-Date -Format 'yyyyMMdd_HHmm')"
        git push
        
    - name: Debug Python environment
      run: |
        Get-Command python | Format-List *
        pip list
        python -c "import sys; print(sys.path)"
