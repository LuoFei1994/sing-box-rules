name: Auto Update Rules

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  build-rules:
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Set Python encoding
      run: |
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        
    # 修改安装依赖步骤
    - name: Install dependencies
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath -m pip install --upgrade pip
        & $pythonPath -m pip install requests pyyaml
        
    # 关键修改2：修复系统路径（保持不变）
    - name: Add Python to system PATH
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "Scripts"
        echo "PYTHONPATH=$pythonPath;$pythonLocation" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "PATH=$pythonPath;$env:PATH" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
    # 修改验证环境步骤，使用英文输出
    - name: Verify installation
      run: |
        python -c "import requests; print('Requests version: ' + requests.__version__)"
        python -m pip list
      
    # 关键修改：使用指定路径运行脚本
    - name: Convert Rules
      run: |
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        
        # 添加 sources.txt 到工作区（修复语法）
        $sourcesPath = "sources.txt"
        if (-not (Test-Path $sourcesPath)) {
            safe_print "Created default sources.txt file"
        }
        
        # 处理所有规则
        & $pythonPath scripts/convert.py
        
        # 如果需要处理特定规则，使用如下命令：
        # & $pythonPath scripts/convert.py --source PrivacyPlus
      
    - name: Commit and Push
      run: |
        # 设置 Git 身份
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        
        # 添加所有更改
        git add build/
        
        # 提交更改（使用当前时间）
        $commitMessage = "自动更新规则集 - $(Get-Date -Format 'yyyyMMdd_HHmm')"
        git commit -m $commitMessage
        
        # 配置带令牌的远程 URL
        $originUrl = "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git remote set-url origin $originUrl
        
        # 推送更新到主分支
        git push origin HEAD:main

    - name: Verify environment
      run: |
        # 检查Python安装位置
        $pythonPath = Join-Path -Path $env:pythonLocation -ChildPath "python.exe"
        & $pythonPath --version
        
        # 检查请求模块安装位置
        & $pythonPath -c "import requests; print(requests.__file__)"
        
        # 检查系统路径
        echo "系统PATH:"
        echo $env:PATH
        
        # 检查用户模块路径
        & $pythonPath -c "import site; print('用户site-packages:', site.getusersitepackages())"
